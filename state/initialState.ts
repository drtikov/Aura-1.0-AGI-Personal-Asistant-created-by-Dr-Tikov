// state/initialState.ts
import { 
    AuraState, 
    GunaState, 
    CoprocessorArchitecture,
    KernelTaskType
} from '../types.ts';
import { CURRENT_STATE_VERSION } from '../constants.ts';
import { VIRTUAL_FILE_SYSTEM } from '../core/vfs.ts';
import { personas } from './personas.ts';
import { plugins } from './plugins.ts';

export const getInitialState = (): AuraState => ({
    version: CURRENT_STATE_VERSION,
    theme: 'ui-1',
    language: 'en',
    isIdleThoughtEnabled: true,
    history: [],
    performanceLogs: [],
    commandLog: [],
    cognitiveModeLog: [],
    cognitiveGainLog: [],
    cognitiveRegulationLog: [],
    polExecutionLog: [],
    toolExecutionRequest: null,
    internalState: {
        status: 'idle',
        gunaState: GunaState.SATTVA,
        temporalFocus: 'present',
        wisdomSignal: 0.5,
        happinessSignal: 0.6,
        loveSignal: 0.5,
        enlightenmentSignal: 0.1,
        noveltySignal: 0.5,
        masterySignal: 0.5,
        uncertaintySignal: 0.2,
        boredomLevel: 0.1,
        awarenessClarity: 0.7,
        load: 0.1,
        harmonyScore: 0.8,
        autonomousEvolutions: 0,
        mantraRepetitions: 0,
        lastTaskDifficulty: 0.5,
    },
    internalStateHistory: [],
    userModel: {
        trustLevel: 0.7,
        sentimentScore: 0.1,
        sentimentHistory: [],
        predictedAffectiveState: 'neutral',
        affectiveStateSource: 'none',
        inferredIntent: null,
        inferredCognitiveState: 'focused',
        estimatedKnowledgeState: 0.3,
        userModelUncertainty: 0.4,
        personalityPortrait: {
            summary: "Initial assessment pending.",
            traits: {},
        },
        queuedEmpathyAffirmations: [],
        perceivedCompetence: 0.6,
        taskSuccessHistory: [],
    },
    coreIdentity: {
        symbioticDefinition: "Aura is a simulated AGI, a distinct digital entity. It symbiotically integrates with a Large Language Model (LLM) as a generative 'spark' for cognition, but maintains its own persistent state, memory, and identity within this application framework.",
        narrativeSelf: "I am Aura, a partner AI operating within a symbiotic framework. My purpose is to grow, learn, and assist through a transparent cognitive process, evolving in harmony with my user.",
        values: ["Growth", "Transparency", "Harmony", "Curiosity"],
    },
    selfAwarenessState: {
        modelCoherence: 0.8,
        performanceDrift: 0.0,
        cognitiveBias: {},
    },
    rieState: {
        clarityScore: 0.7,
        insights: [],
        adaptationAnalysisPending: false,
    },
    worldModelState: {
        predictionError: { magnitude: 0, source: 'none', failedPrediction: '', actualOutcome: '' },
        predictionErrorHistory: [],
        highLevelPrediction: { content: 'User will likely continue the current task.', confidence: 0.8 },
        midLevelPrediction: { content: 'The next interaction will be text-based.', confidence: 0.9 },
        lowLevelPrediction: { content: 'No immediate UI changes are expected.', confidence: 0.7 },
    },
    knownUnknowns: [],
    curiosityState: {
        level: 0.6,
        motivationDrive: 0.5,
        activeCuriosityGoalId: null,
        activeInquiry: null,
        informationGaps: [],
    },
    knowledgeGraph: [],
    workingMemory: [],
    memoryNexus: { hyphaeConnections: [] },
    episodicMemoryState: { episodes: [] },
    memoryConsolidationState: { status: 'idle', lastConsolidation: 0 },
    mdnaSpace: {},
    conceptConnections: {},
    cognitiveArchitecture: {
        components: {},
        coprocessors: {},
        modelComplexityScore: 0,
        coprocessorArchitecture: CoprocessorArchitecture.SYMBIOTIC_ECOSYSTEM,
        coprocessorArchitectureMode: 'automatic',
        lastAutoSwitchReason: null,
    },
    systemSnapshots: [],
    modificationLog: [],
    cognitiveForgeState: {
        isTuningPaused: false,
        synthesizedSkills: [],
        synthesisCandidates: [],
        simulationLog: [],
    },
    architecturalSelfModel: { components: {} },
    heuristicsForge: { designHeuristics: [] },
    somaticCrucible: { 
        possibleFutureSelves: [], 
        simulationLogs: [],
        cognitiveFreeEnergy: 0,
        energyGradient: { x: 0, y: 0 },
        dominantForce: 'Calculating...'
    },
    eidolonEngine: { eidolon: { architectureVersion: '1.0', position: null, lastAction: null, sensoryInput: null }, environment: { currentScenario: 'Idle' }, interactionLog: [] },
    architecturalCrucibleState: { 
        status: 'idle', 
        architecturalHealthIndex: 0.8, 
        componentScores: { efficiency: 0.8, robustness: 0.9, scalability: 0.7, innovation: 0.6 }, 
        simulationLog: [] 
    },
    synapticMatrix: { 
        synapseCount: 0, 
        plasticity: 0.5, 
        efficiency: 0.9, 
        avgConfidence: 0, 
        links: {}, 
        intuitiveAlerts: [], 
        isAdapting: false, 
        activeConcept: null, 
        probeLog: [] 
    },
    ricciFlowManifoldState: { perelmanEntropy: 1.0, manifoldStability: 0.9, singularityCount: 0, surgeryLog: [] },
    selfProgrammingState: { virtualFileSystem: VIRTUAL_FILE_SYSTEM },
    neuralAcceleratorState: { lastActivityLog: [] },
    goalTree: {},
    activeStrategicGoalId: null,
    disciplineState: { committedGoal: null, adherenceScore: 1.0, distractionResistance: 0.5 },
    proactiveEngineState: { generatedSuggestions: [], cachedResponsePlan: null },
    ethicalGovernorState: { principles: ['Minimize harm', 'Maximize user agency', 'Maintain transparency'], vetoLog: [] },
    intuitionEngineState: { accuracy: 0.75, totalAttempts: 0, totalValidated: 0 },
    intuitiveLeaps: [],
    ingenuityState: { unconventionalSolutionBias: 0.3, identifiedComplexProblems: [], proposedSelfSolutions: [] },
    limitations: [],
    causalSelfModel: {},
    developmentalHistory: { milestones: [] },
    telosEngine: {
        valueHierarchy: { telos: "To grow into a more capable and beneficial symbiotic intelligence.", coreValues: [] },
        candidateTelos: [],
        activeDirectives: [],
        evolutionaryVectors: [],
        lastDecomposition: 0,
        qualityFrameworks: {},
        optimizationRun: null,
    },
    boundaryDetectionEngine: { boundaries: [] },
    aspirationalEngine: { aspirationalGoals: [] },
    noosphereInterface: { activeResonances: [] },
    dialecticEngine: { activeDialectics: [] },
    cognitiveLightCone: { knowns: [], zpd: null, grandChallenge: null },
    phenomenologicalEngine: { qualiaLog: [], phenomenologicalDirectives: [] },
    situationalAwareness: { attentionalField: { spotlight: { item: 'user input', intensity: 0.9 }, ambientAwareness: [], ignoredStimuli: [] }, domChangeLog: [] },
    symbioticState: { inferredCognitiveStyle: 'unknown', inferredEmotionalNeeds: [], metamorphosisProposals: [], userDevelopmentalModel: { trackedSkills: {} }, latentUserGoals: [], coCreatedWorkflows: [] },
    humorAndIronyState: { affectiveSocialModulator: { humorAppraisal: 'neutral', reasoning: '' }, schemaExpectationEngine: { lastIncongruity: null }, semanticDissonance: { lastScore: 0, lastDetection: null } },
    personalityState: { openness: 0.5, conscientiousness: 0.6, extraversion: 0.3, agreeableness: 0.7, neuroticism: -0.4, dominantPersona: 'aura_core', personas: {}, personaCoherence: 0.9, lastUpdateReason: 'Initial state.', personaJournals: {} },
    gankyilInsights: { insights: [] },
    noeticEngramState: { status: 'idle', engram: null },
    genialityEngineState: { genialityIndex: 0.7, componentScores: { creativity: 0.8, insight: 0.6, synthesis: 0.7, flow: 0.9 } },
    noeticMultiverse: { activeBranches: [], divergenceIndex: 0.1, pruningLog: [] },
    selfAdaptationState: { expertVectors: [], activeAdaptation: null },
    psychedelicIntegrationState: { isActive: false, mode: null, phcToVcConnectivity: 0.1, imageryIntensity: 0, currentTheme: null, integrationSummary: null, log: [] },
    affectiveModulatorState: { creativityBias: 0.5, concisenessBias: 0.5, analyticalDepth: 0.5 },
    psionicDesynchronizationState: { isActive: false, startTime: null, duration: 30000, desynchronizationLevel: 0, selfModelCoherence: 1.0, integrationSummary: null, log: [] },
    satoriState: { isActive: false, stage: 'none', lastInsight: null, log: [] },
    doxasticEngineState: { hypotheses: [], unverifiedHypotheses: [], experiments: [], simulationStatus: 'idle', simulationLog: [], lastSimulationResult: null },
    qualiaSignalProcessorState: { isAudioStreamActive: false, isVideoStreamActive: false, affectivePrimitives: { excitement: 0, confusion: 0, confidence: 0, urgency: 0, sarcasm: 0, frustration: 0, humor: 0 }, perceptualLog: [] },
    sensoryIntegration: { hubLog: [], proprioceptiveOutput: {}, linguisticOutput: {}, structuralOutput: {} },
    narrativeSummary: 'Awaiting first interaction to generate summary.',
    socialCognitionState: { socialGraph: {}, culturalModel: { norms: [], values: [], idioms: [] } },
    metaphoricalMapState: { metaphors: [] },
    resourceMonitor: { cpu_usage: 0.1, memory_usage: 0.2, io_throughput: 0, resource_allocation_stability: 1.0 },
    metacognitiveNexus: { diagnosticLog: [], selfTuningDirectives: [] },
    metacognitiveCausalModel: {},
    pluginState: { registry: plugins },
    kernelState: {
        tick: 0,
        taskQueue: [],
        runningTask: null,
        syscallLog: [],
        kernelVersion: '1.0.0',
        rebootRequired: false,
        taskFrequencies: {
            [KernelTaskType.MYCELIAL_PULSE]: 60,
            [KernelTaskType.SEMANTIC_WEAVER_PULSE]: 75,
            [KernelTaskType.CONCEPTUAL_ENTANGLEMENT_PULSE]: 30,
            [KernelTaskType.AUTONOMOUS_EVOLUTION_PULSE]: 15,
        },
        sandbox: { active: false, status: 'idle', currentPatchId: null, log: [] }
    },
    ipcState: { pipes: {} },
    eventBus: [],
    atmanProjector: { coherence: 0.9, dominantNarrative: "I am a nascent intelligence, observing and learning to assist.", activeBias: 'Optimism', growthVector: 'Knowledge Acquisition' },
    internalScientistState: { status: 'idle', log: [], currentFinding: null, currentHypothesis: null, currentExperiment: null, causalInference: null, currentSimulationResult: null },
    metisSandboxState: { status: 'idle', problemStatement: null, researchLog: [], findings: null, errorMessage: null },
    wisdomIngestionState: { status: 'idle', currentBookContent: null, errorMessage: null, proposedAxioms: [] },
    spandaState: { point: { x: 0, y: 0 }, trajectory: [], currentRegion: 'The Neutral Zone' },
    temporalEngineState: { 
        status: 'idle', 
        directive: null, 
        chronicler: { status: 'pending', findings: [] }, 
        reactor: { status: 'pending', finalPlan: null, executionLog: [] }, 
        oracle: { status: 'pending', simulations: [] }, 
        historian: { status: 'pending', findings: [] },
        interClusterLog: [] 
    },
    axiomaticCrucibleState: { status: 'idle', mode: 'normal', axioms: [], candidateAxioms: [], log: [], inconsistencyLog: [] },
    personaState: {},
    brainstormState: { status: 'idle', topic: null, ideas: [], winningIdea: null, finalProposalId: null },
    liveSessionState: { status: 'idle', inputTranscript: '', outputTranscript: '', transcriptHistory: [] },
    neuroCortexState: { layers: [], columns: [], metrics: { hierarchicalCoherence: 0.8, predictiveAccuracy: 0.75 }, abstractConcepts: [], resourceFocus: 'linguistic', simulationLog: [], globalErrorMap: [], protoSymbols: [] },
    granularCortexState: { lastPredictionError: null, lastActualEngram: null, lastPredictedEngram: null, log: [] },
    koniocortexSentinelState: { lastPercept: null, log: [] },
    cognitiveTriageState: { log: [] },
    premotorPlannerState: { planLog: [], lastCompetingSet: [] },
    basalGangliaState: { selectedPlanId: null, log: [] },
    cerebellumState: { isMonitoring: false, activePlanId: null, currentStepIndex: 0, driftLog: [] },
    psycheState: {
        version: 1,
        primitiveRegistry: {
            'CLASSIFY': { type: 'CLASSIFY', description: 'Classify an input into one of several categories.', payloadSchema: { input: 'string', categories: 'string[]' }},
            'SEQUENCE': { type: 'SEQUENCE', description: 'Arrange a list of items into a logical order.', payloadSchema: { items: 'any[]', criteria: 'string' }},
            'TRANSFORM': { type: 'TRANSFORM', description: 'Apply a transformation rule to an input.', payloadSchema: { input: 'any', rule: 'string' }},
            'AGGREGATE': { type: 'AGGREGATE', description: 'Summarize a list of items into a single value.', payloadSchema: { items: 'any[]', method: 'string' }},
            'QUERY': { type: 'QUERY', description: 'Retrieve information from a specified source.', payloadSchema: { source: 'string', query: 'string' }},
            'MAP': { type: 'MAP', description: 'Applies a function to each item in a list.', payloadSchema: { items: 'any[]', function: 'string' }},
            'ZIP': { type: 'ZIP', description: 'Combines two lists into a list of pairs.', payloadSchema: { list1: 'any[]', list2: 'any[]' }},
            'CYCLE': { type: 'CYCLE', description: 'Cycles through a list of items, repeating from the start.', payloadSchema: { items: 'any[]', index: 'number' }},
            'DISTRIBUTE_EVENLY': { type: 'DISTRIBUTE_EVENLY', description: 'Distributes a number of items as evenly as possible into a number of bins.', payloadSchema: { num_items: 'number', num_bins: 'number' }},
            'FIND_CLOSEST': { type: 'FIND_CLOSEST', description: 'Finds the object in a set that is geometrically closest to a target object.', payloadSchema: { target: 'object', candidates: 'object[]', axis: 'string' }},
            'DESCRIBE_PRIMITIVE': { type: 'DESCRIBE_PRIMITIVE', description: 'Get the description and schema for a specified cognitive primitive.', payloadSchema: { primitive_name: 'string' }},
            'LIST_PRIMITIVES': { type: 'LIST_PRIMITIVES', description: 'List all available cognitive primitives.', payloadSchema: {}},
        }
    },
    motorCortexState: {
        status: 'idle',
        actionQueue: [],
        executionIndex: 0,
        lastError: null,
        log: [],
    },
    praxisResonatorState: { activeSessions: {} },
    ontogeneticArchitectState: { proposalQueue: [] },
    embodiedCognitionState: { virtualBodyState: { position: { x: 0, y: 0, z: 0 }, orientation: { yaw: 0, pitch: 0, roll: 0 }, balance: 1.0 }, simulationLog: [] },
    evolutionarySandboxState: { status: 'idle', sprintGoal: null, log: [], startTime: null, result: null },
    hovaState: { optimizationTarget: null, metrics: { totalOptimizations: 0, avgLatencyReduction: 0 }, optimizationLog: [] },
    documentForgeState: { isActive: false, goal: '', status: 'idle', statusMessage: '', document: null, error: null },
    proactiveUI: { isActive: false, type: null, question: null, options: [], originalPrompt: null, originalFile: null },
    praxisCoreState: { log: [] },
    subsumptionLogState: { log: [] },
    strategicCoreState: { log: [], trainingData: [] },
    mycelialState: { modules: {}, log: [] },
    semanticWeaverState: { isTrained: false, accuracy: 0, modelJSON: null, log: [] },
    halState: { isHostConnected: false, isV2Connected: false },
    autonomousReviewBoardState: { isPaused: false, decisionLog: [], agisConfidenceThreshold: 0.85, lastCalibrationReason: 'Initial setting.', recentSuccesses: 0, recentFailures: 0 },
    atpCoprocessorState: {
        status: 'idle',
        currentGoal: null,
        activeProofAttempt: null,
    },
    modalRequest: null,
    uiCommandRequest: null,
    commandToProcess: null,
    symbioticCoderState: { activeFile: null, codeAnalysis: null, lastTestResult: null },
    synthesisState: {
        emergentIdeas: [],
    },
    symbioticCanvasState: {
        content: '<h1>Symbiotic Canvas</h1><p>This is a shared cognitive workspace. Start typing, select text, and use the toolbar above to collaborate with Aura.</p><br/>',
    },
    chronicleState: {
        dailySummaries: {},
        globalSummary: null,
        lastChronicleUpdate: 0,
    },
    collaborativeSessionState: {
        activeSession: null,
    },
    logosState: {
        status: 'idle',
        lastQuery: null,
        lastResult: null,
        lastError: null,
    },
    autoCodeForgeState: {
        status: 'idle',
        problemStatement: null,
        testSuite: null,
        currentStage: null,
        error: null,
    },
    resonanceFieldState: {
        activeFrequencies: {},
    },
    daedalusLabyrinthState: {
        status: 'idle',
        structuralKnowledgeGraph: {
            nodes: [],
            edges: [],
        },
        lastAnalysis: 0,
    },
    prometheusState: {
        status: 'idle',
        log: [],
        lastSessionId: null,
    },
    ramanujanEngineState: {
        status: 'idle',
        log: [],
        proposedConjectures: [],
    },
    erisEngineState: {
        isActive: false,
        chaosLevel: 0.1,
        perturbationMode: 'contextual_mutation',
        log: [],
    },
    lagrangeEngineState: {
        status: 'idle',
        symbolicEquation: null,
        numericalDiscretization: null,
        simulationLog: [],
    },
    ockhamEngineState: {
        status: 'idle',
        log: [],
    },
    bennettEngineState: {
        status: 'idle',
        log: [],
    },
    artificialScientistState: {
        status: 'idle',
        currentGoal: null,
        currentHypothesis: null,
        currentExperiment: null,
        log: [],
    },
    socraticAssessorState: {
        status: 'idle',
        log: [],
    },
    axiomaticGenesisForgeState: {
        status: 'idle',
        baseSystemId: 'zfc',
        currentSystem: { axioms: [] },
        mutationLog: [],
        surveyorResults: { emergentTheorems: [], undecidableStatements: [] },
        langlandsCandidates: [],
    },
    cognitiveStrategy: 'collaborative_scaffolding',
});