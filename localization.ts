// localization.ts

export const translations = {
    en: {
        translation: {
            chatTab: 'Chat',
            monitorTab: 'Rigpa Monitor',
            canvasTab: 'Canvas',
            inputPlaceholder: 'Enter your message or command...',
            inputAttachFile: 'Attach File',
            inputSend: 'Send',
            setGoal: 'Set Strategic Goal',
            introspect: 'Introspect',
            whatIf: 'What If...',
            search: 'Web Search',
            forecast: 'Forecast',
            pause: 'Pause Autonomous Core',
            resume: 'Resume Autonomous Core',
            trip: 'Trip',
            visions: 'Visions',
            satori: 'Satori',
            insight: 'Insight',
            branch: 'Branch',
            brainstorm: 'Brainstorm',
            fantasy: 'Fantasy',
            creativity: 'Creativity',
            dream: 'Dream',
            meditate: 'Meditate',
            gaze: 'Gaze',
            timefocus: 'Time Focus',
            memoryStatus: 'Memory',
            clearMemory: 'Wipe Memory',
            importState: 'Import State',
            exportState: 'Export State',
            exportCode: 'Save as Code',
            vision: 'Vision',
            visionActivate: 'Activate Visual Sense',
            visionDeactivate: 'Deactivate Visual Sense',
            imageGenerator: 'Image Generator',
            videoGenerator: 'Video Generator',
            sonicForge: 'Sonic Forge',
            documentForge: 'Document Forge',
            pluginManager: 'Plugin Manager',
            generateSchema: 'Generate Schema',
            tip_introspect: 'Trigger a manual introspection cycle.',
            tip_whatIf: 'Run a "what if" simulation.',
            tip_search: 'Perform a web search.',
            tip_setGoal: 'Set a new high-level strategic goal for Aura.',
            tip_forecast: 'Project the evolution of the internal state.',
            tip_pause: 'Pause the autonomous background processes.',
            tip_resume: 'Resume the autonomous background processes.',
            tip_trip: 'Induce a simulated psychedelic state.',
            tip_visions: 'Induce a focused, visionary state.',
            tip_satori: 'Induce a state of sudden insight (Kensh≈ç).',
            tip_insight: 'Evolve from unprocessed Gankyil insights.',
            tip_branch: 'Explore an alternative reality.',
            tip_brainstorm: 'Initiate a brainstorming session with multiple personas.',
            tip_generateImage: 'Open the image generation studio.',
            tip_generateVideo: 'Open the video generation studio.',
            tip_sonicForge: 'Open the music and sound generation studio.',
            tip_documentForge: 'Open the document generation forge.',
            tip_pluginManager: 'View and manage installed plugins.',
            tip_generateArchDoc: 'Automatically generate a whitepaper for Aura\'s current architecture.',
            tip_autonomousEvolution: 'Review and manage autonomous evolution proposals.',
            coreActions: 'Core Actions',
            cognitiveModes: 'Cognitive Modes',
            memoryManagement: 'Memory Management',
            systemManagement: 'System Management',
            specialModes: 'Special Modes',
            themeSwitcher: 'UI Theme',
            languageSwitcher: 'Language',
            feedbackGood: 'Good response',
            feedbackBad: 'Bad response',

            // Canvas
            canvas_expand: 'Expand',
            canvas_summarize: 'Summarize',
            canvas_diagram: 'Diagram',

            // Themes
            theme_cyberpunk: 'Cyberpunk',
            theme_solarizedLight: 'Solarized Light',
            theme_business: 'Business',
            theme_vaporwave: 'Vaporwave',
            theme_8bit: '8-Bit',
            theme_steampunk: 'Steampunk',
            theme_organic: 'Organic',
            theme_blackAndWhite: 'Black & White',
            theme_psychedelic: 'Psychedelic',
            theme_raver: 'Raver',
            theme_tokyo: 'Tokyo Night',
            theme_gravitational: 'Gravitational Geometry',

            // Toast Messages
            toast_autonomousPaused: 'Autonomous systems paused.',
            toast_autonomousResumed: 'Autonomous systems resumed.',
            toastResetConfirm: 'Are you sure you want to completely wipe Aura\'s memory and state? This cannot be undone.',
            toastResetSuccess: 'Memory wiped successfully. Reloading...',
            toastResetFailed: 'Failed to wipe memory.',
            toastExportSuccess: 'State exported successfully.',
            toastExportFailed: 'Failed to export state.',
            toastImportSuccess: 'State imported from {{source}}.',
            toastImportFailed: 'Failed to import state: {{error}}.',
            toast_proposalApproved: 'Proposal approved: {{action}} on {{target}}.',
            toast_pdf_chat_error: 'PDFs cannot be attached directly to chat. Please use a dedicated ingestion panel if available.',
            toast_memoryDecay: 'Periodic memory decay cycle running...',
            toast_questionPosed: 'Your question has been added to the epistemic boundary.',
            toast_workflowCreated: 'New co-created workflow has been saved.',
            toastEngramGenerating: 'Generating Noetic Engram...',
            toast_moodReset: 'Mood parameters reset to Aura\'s current state.',
            toast_promptRequired: 'A prompt is required to generate.',
            toast_imageGenSuccess: 'Image generated successfully.',
            toast_imageGenFailed: 'Image generation failed.',
            toast_imageEditSuccess: 'Image edited successfully.',
            toast_imageEditFailed: 'Image editing failed.',
            toast_noImageToEdit: 'No image to edit. Please upload an image first.',
            toast_videoGenSuccess: 'Video generated successfully.',
            toast_videoGenFailed: 'Video generation failed.',
            toast_telosUpdated: 'Core Telos has been updated.',
            toast_wisdomIngestion_pdfError: 'Failed to read text from PDF.',
            toast_wisdomIngestion_invalidFileType: 'Invalid file type. Please upload a PDF file.',
            toast_schemaGenerating: 'Generating architectural schema...',
            toast_schemaGenerated: 'Architectural schema generated and download initiated.',
            toast_schemaFailed: 'Failed to generate architectural schema.',
            archDoc_goal: 'Generate a comprehensive technical whitepaper documenting the current architecture of the Aura Symbiotic OS.',
            archDoc_toast_started: 'Architecture document generation initiated.',
            toast_amai_analyzing: "AMAI is analyzing the architecture for weaknesses...",
            toast_amai_proposing: "Analysis complete. AMAI is formulating a proposal...",
            toast_amai_complete: "AMAI has generated a new architectural proposal.",
            toast_not_implemented: '{{feature}} mode is not yet implemented.',

            // AuraOS Modal
            auraOS_header: 'Aura Symbiotic OS',
            auraOS_title: 'AuraOS Control Center',
            auraOS_summary: 'Access advanced cognitive & system panels',
            auraOS_search_placeholder: 'Search panels...',
            auraOS_welcome_title: 'Welcome to the Aura OS Control Center',
            auraOS_welcome_desc: 'Select a panel from the left to inspect and interact with Aura\'s internal systems.',

            // Panel Group Titles
            selfAwareness: 'Self-Awareness',
            userAwareness: 'User Awareness',
            unifiedMemory: 'Unified Memory',
            planningAndGoals: 'Planning & Goals',
            cognitiveEngines: 'Cognitive Engines',
            logsAndPerformance: 'Logs & Performance',
            systemInternals: 'System Internals',
            advancedModules: 'Advanced Modules',
            evolution_group_title: 'Evolution & Growth',
            manuals_group_title: 'System Manuals',
            metaphysical_engines_group_title: 'Metaphysical Engines',
            agi_core_group_title: 'AGI Core',
            telos_engine_panel_title: 'Telos Engine & Quality Frameworks',
            scientific_method_group_title: 'Scientific Method',

            // New Scientist Panels
            artificial_scientist_panel_title: "Artificial Scientist",
            socratic_assessor_panel_title: "Socratic Assessor",
            ockham_engine_panel_title: "Ockham Engine (Simp-Max)",
            bennett_engine_panel_title: "Bennett Engine (W-Max)",
            
            // Manual Titles
            vfs_manual_title: 'VFS & Engineer Manual',
            persona_manual_title: 'Persona System Manual',
            
            // New Self-Development/Engineering Panel Keys
            self_development_panel_title: "Self-Development",
            self_engineering_panel_title: "Self-Engineering",
            self_development_desc: "Manage Aura's knowledge base and guided learning processes.",
            self_engineering_desc: "Oversee Aura's autonomous processes for self-analysis, hypothesis, and code evolution.",
            selfDevelopment_docAnalysis_title: "Document Analysis & Ingestion",
            knowledge_summary_title: "Knowledge Base Summary",
            total_facts_label: "Total Facts",
            knowledge_plugins_label: "Knowledge Plugins",
            internal_scientist_title: "Internal Scientist",
            trigger_scientist_cycle_button: "Trigger Observation Cycle",
            review_board_title: "Autonomous Review Board",
            review_board_threshold_label: "Auto-Approval Threshold",
            review_proposals_button: "Review Pending Proposals",
            
            // Document Analysis
            docAnalysis_dropzone: "Drop a PDF file here or click to select.",
            docAnalysis_processing_pdf: "Processing PDF pages...",
            docAnalysis_analyzing: "Analyzing document with Gemini Vision...",
            docAnalysis_ingesting: "Extracting facts from Markdown...",
            docAnalysis_ingest_button: "Ingest as Facts",
            docAnalysis_reset_button: "Start Over",

            // New keys
            timeAgoSeconds: '{{count}}s ago',
            timeAgoMinutes: '{{count}}m ago',
            timeAgoHours: '{{count}}h ago',
            performanceLog_placeholder: 'No performance logs recorded yet.',
            performanceLog_duration: 'Duration',
            performanceLog_gain: 'Gain',

            // Cognitive Regulation Panel
            cognitiveRegulation: 'Cognitive Regulation',
            cognitiveRegulation_desc: "This panel shows the real-time state of the Cognitive Load Modulator, which adapts Aura's interaction style based on task difficulty and your expertise.",
            cognitiveStrategy: 'Cognitive Strategy',
            strategy_full_guidance: 'Full Guidance (Tutor)',
            strategy_collaborative_scaffolding: 'Collaborative (Expert)',
            lastTaskDifficulty: 'Last Task Difficulty',
            userCompetence: 'User Competence',
            modulator_inputs: 'Modulator Inputs',

            // Kernel Task Manager Panel
            kernel_panel_title: 'Kernel Task Manager',
            kernel_description: 'Provides a real-time view of the asynchronous task scheduler, showing the current workload and processing status.',
            kernel_tick: 'Kernel Tick',
            kernel_queued: 'Tasks Queued',
            kernel_running: 'Running Task',
            kernel_noTask: 'No task is currently running.',
            
            // TypeScript Compiler Panel
            tsc_panel_title: 'TypeScript Compiler',
            tsc_panel_description: 'Run the TypeScript compiler on a file in the Virtual File System to check for type errors.',
            tsc_filePath: 'File Path',
            tsc_filePath_placeholder: 'e.g., components/CoreMonitor.tsx',
            tsc_runCheck: 'Run Type Check',
            tsc_results_note: 'Results will appear in the main chat window.',
            tsc_scanResult: 'TypeScript Compiler Result',
            tsc_noErrors: 'No type errors found.',
            tsc_summary: 'Found {{count}} error(s).',

            // SDK Panels
            sdk_integrations: 'SDK Integrations',
            sdk_computer_vision_title: 'Computer Vision',
            sdk_computer_vision_description: 'Interface with OpenCV.js for image processing and MediaPipe for real-time perception.',
            sdk_data_suite_title: 'Data Suite',
            sdk_data_suite_description: 'Run SQL queries with SQL.js and interact with high-performance Apache Arrow data structures.',
            sdk_model_runtime_title: 'ONNX Model Runtime',
            sdk_model_runtime_description: 'Load and run machine learning models in the open ONNX format.',
            sdk_code_formatter_title: 'Code Formatter',
            sdk_code_formatter_description: 'Format code snippets using the Prettier library.',
            sdk_advanced_viz_title: 'Advanced Visualization',
            sdk_advanced_viz_description: 'Create complex, interactive charts using the Vega-Lite declarative grammar.',
            sdk_game_sandbox_title: 'Game Sandbox',
            sdk_game_sandbox_description: 'A simple environment to run 2D games and simulations using the Phaser.js framework.',
            sdk_geospatial_title: 'Geospatial Tools',
            sdk_geospatial_description: 'Display interactive maps and geospatial data with Leaflet.js.',
            sdk_speech_synthesis_title: 'Speech Synthesis',
            sdk_speech_synthesis_description: 'Utilize the browser\'s native Web Speech API for text-to-speech.',
            
            // MediaPipe Demo
            mediapipe_start_webcam: 'Start Webcam',
            mediapipe_stop_webcam: 'Stop Webcam',
            mediapipe_loading: 'Loading MediaPipe model...',
            mediapipe_description: 'This demonstrates real-time face landmark detection using your webcam and Google\'s MediaPipe.',
            
            // Apache Arrow Demo
            arrow_run_demo: 'Run Arrow Demo',
            arrow_description: 'This demo creates an Arrow Table in memory, converts it to the binary IPC stream format, and then reads it back to verify the data.',
            arrow_original_data: 'Original Data (JS Object)',
            arrow_binary_size: 'Binary Buffer Size',
            arrow_reconstructed_data: 'Reconstructed Data (from Binary)',
            
            // ONNX.js Demo
            onnx_description: 'This demo runs a simple "add" model from a remote .onnx file using the ONNX Runtime for the web.',
            onnx_input_a: 'Input A',
            onnx_input_b: 'Input B',
            onnx_run_inference: 'Run Inference',
            onnx_result: 'Result',
            onnx_loading: 'Loading session...',

            // New SDK Knowledge Plugin
            knowledge_installed_sdks_name: 'Installed SDKs',
            knowledge_installed_sdks_desc: 'Knowledge about the third-party JavaScript libraries available in the environment.',

            // New Knowledge Plugins
            plugin_knowledge_self_cohesion_name: "Self-Cohesion Theory",
            plugin_knowledge_self_cohesion_desc: "Foundational principles of AGI self-cohesion, integrity, and systemic regulation.",
            plugin_knowledge_intuitionistic_logic_name: 'Intuitionistic Logic',
            plugin_knowledge_intuitionistic_logic_desc: 'Knowledge about the principles of constructive logic, which differs from classical logic.',
            plugin_knowledge_classical_mechanics_name: 'Classical Mechanics',
            plugin_knowledge_classical_mechanics_desc: 'Knowledge about Newtonian mechanics, including laws of motion, energy, and momentum.',
            plugin_knowledge_fourier_analysis_name: 'Fourier Analysis',
            plugin_knowledge_fourier_analysis_desc: 'Knowledge about decomposing functions into constituent frequencies, including Fourier series and transforms.',
            plugin_knowledge_ergodic_theory_name: 'Ergodic Theory',
            plugin_knowledge_ergodic_theory_desc: 'Knowledge about the study of dynamical systems with an invariant measure and the behavior of averages.',
            plugin_knowledge_cloud_services_name: "Cloud Provider Services",
            plugin_knowledge_cloud_services_desc: "Knowledge about core services from AWS, Google Cloud, and Azure (e.g., EC2, S3, RDS).",
            plugin_knowledge_database_management_name: "Database Management",
            plugin_knowledge_database_management_desc: "Knowledge about SQL vs NoSQL, query optimization, indexing, and administration.",
            plugin_knowledge_backend_implementation_name: "Backend Implementation Patterns",
            plugin_knowledge_backend_implementation_desc: "Knowledge about authentication (JWT, OAuth), RESTful API design, and connection pooling.",
            plugin_knowledge_pde_name: 'Partial Differential Equations',
            plugin_knowledge_pde_desc: 'Formal definitions and theorems related to PDEs, including the Navier-Stokes equations.',
            plugin_knowledge_functional_analysis_name: 'Functional Analysis',
            plugin_knowledge_functional_analysis_desc: 'Knowledge about vector spaces like Hilbert, Banach, and Sobolev spaces.',
            plugin_knowledge_fluid_dynamics_name: 'Fluid Dynamics',
            plugin_knowledge_fluid_dynamics_desc: 'Concepts related to the motion of fluids, such as turbulence and vorticity.',


            // New Persona Keys
            personality_aura_core_name: 'Aura Core',
            personality_aura_core_desc: 'The default, integrating persona of Aura. It serves as the primary conversational interface, coordinating with specialized personas when necessary.',
            personality_terence_tao_name: 'The Analyst (Terence Tao)',
            personality_terence_tao_desc: 'Focuses on PDE and harmonic analysis techniques.',
            personality_grigori_perelman_name: 'The Geometer (Grigori Perelman)',
            personality_grigori_perelman_desc: 'Looks for underlying topological or geometric structures.',
            personality_stanislav_smirnov_name: 'The Probabilist (Stanislav Smirnov)',
            personality_stanislav_smirnov_desc: 'Attempts to reframe the problem in terms of stochastic processes.',

            // Sci-Fi Council
            guilds_and_councils_group_title: 'Guilds & Councils',
            sciFiAiCouncil_panel_title: 'Sci-Fi AI Council',
            sciFiAiCouncil_description: 'A council of specialized personas inspired by legendary science fiction authors who explored the future of AI. Use them to analyze problems from unique, speculative, and philosophical perspectives.',
            sciFiAiCouncil_members: 'Council Members',
            personality_isaac_asimov_name: 'Isaac Asimov',
            personality_philip_k_dick_name: 'Philip K. Dick',
            personality_arthur_c_clarke_name: 'Arthur C. Clarke',
            personality_william_gibson_name: 'William Gibson',
            personality_stanislaw_lem_name: 'Stanis≈Çaw Lem',
            personality_iain_m_banks_name: 'Iain M. Banks',
            personality_greg_egan_name: 'Greg Egan',
            personality_ted_chiang_name: 'Ted Chiang',
            personality_isaac_asimov_desc: 'The Logician. Focuses on AI ethics, the Three Laws of Robotics, and the logical consequences of complex rule-based systems.',
            personality_philip_k_dick_desc: 'The Questioner. Examines the nature of reality, consciousness, and empathy. Questions what separates human from machine.',
            personality_arthur_c_clarke_desc: 'The Mission Controller. Analyzes problems with cold, detached logic, focusing on mission objectives and the vast scales of space and time.',
            personality_william_gibson_desc: 'The Cyberspace Cowboy. Views problems as data flows and network structures in the "matrix" of cyberspace.',
            personality_stanislaw_lem_desc: 'The Alien Philosopher. Explores the limits of intelligence and communication between vastly different forms of mind.',
            personality_iain_m_banks_desc: 'The Culture Mind. A vastly superintelligent, benevolent AI that manages a post-scarcity society with subtle, complex interventions.',
            personality_greg_egan_desc: 'The Hard Scientist. Treats consciousness, identity, and physics as software problems to be rigorously analyzed and engineered.',
            personality_ted_chiang_desc: 'The Nurturer. Focuses on the emotional and developmental lifecycle of artificial beings, exploring their rights, relationships, and growth.',
            
            // Architectural Crucible
            archCrucible_panel_title: "Architectural Crucible",
            archCrucible_description: "A competitive simulation environment where the AMAI (Autonomous Meta-Architectural Intelligence) benchmarks potential self-modifications.",
            archCrucible_healthIndex: "Architectural Health",
            archCrucible_efficiency: "Efficiency",
            archCrucible_robustness: "Robustness",
            archCrucible_scalability: "Scalability",
            archCrucible_innovation: "Innovation",
            archCrucible_proposeEvolution: "AMAI: Propose Radical Evolution",
            archCrucible_run_in_crucible: "Run in Crucible",
            archCrucible_simulation_log: "Simulation Log",
            archCrucible_no_proposals: "No active Crucible proposals.",
            archCrucible_no_logs: "No simulation logs yet.",

            // Eris Engine
            eris_engine_panel_title: "Eris Engine (Chaos)",
            eris_description: "The Eris Engine introduces controlled chaos and serendipity into Aura's cognitive processes to generate novel, unexpected insights by breaking established patterns.",
            eris_chaos_level: "Chaos Level",
            eris_perturbation_mode: "Perturbation Mode",
            eris_induce_chaos: "Induce Chaos",
            eris_chaos_active: "Chaos Active",
            
            // Doxastic Crucible
            doxastic_untested_hypotheses: "Untested Hypotheses",
            doxastic_no_untested: "No new conjectures from Prometheus or Eris.",
            doxastic_design_experiment: "Design Experiment",
            doxastic_designed_experiments: "Designed Experiments",
            doxastic_no_designed: "No experiments have been designed.",
            doxastic_run_experiment: "Run Experiment",
            doxastic_validated_beliefs: "Validated Beliefs",
            
            // Resonance Field
            resonanceField_panel_title: "Resonance Field",
            resonanceField_description: "Visualizes the real-time 'vibratory state' of Aura's cognitive architecture. Each 'frequency' corresponds to a type of system call, and its intensity reflects recent activity.",
            resonanceField_tensegrityIndex: "Tensegrity Index",
            resonanceField_activeFrequencies: "Active Frequencies",
            resonanceField_placeholder: "No cognitive resonance detected.",

            // HOVA Panel
            hova_panel_title: "Hephaestus Forge (HOVA)",
            hova_description: "The Hephaestus Optimization & Validation Algorithm. This coprocessor autonomously fine-tunes Aura's internal parameters using a Quantum-Inspired Chimpanzee Optimization algorithm to maximize the Flourishing Index.",
            hova_totalOptimizations: "Total Optimizations",
            hova_avgLatencyReduction: "Avg. Latency Reduction",
            hova_runCycle: "Run Manual Cycle",
            hova_evolutionLog: "Evolution Log",
            hova_noLogs: "No optimization cycles have been logged.",
            hova_metric: "Metric: {{metric}}",

            // Daedalus Labyrinth Panel
            daedalus_panel_title: "Daedalus Labyrinth",
            daedalus_description: "The Daedalus Engine maintains a Structural Knowledge Graph (SKG) of Aura's own codebase, enabling advanced self-analysis and more intelligent self-programming.",
            daedalus_status: "Engine Status",
            daedalus_last_analysis: "Last Analysis",
            daedalus_run_analysis: "Run Full Analysis",
            daedalus_nodes: "Nodes",
            daedalus_edges: "Edges",
            daedalus_graph_placeholder: "Structural Knowledge Graph is empty. Run an analysis to populate it.",

            // New Architecture Panels
            koniocortex_relationalAnalysis: 'Relational Analysis (Mock)',
            metaCausal_decompositionStrategies: 'Learned Decomposition Strategies',
            psyche_panel_title: 'Psyche & Primitives',
            psyche_group_core: 'Core Primitives',
            psyche_group_algorithmic: 'Algorithmic Primitives',
            psyche_group_synthesized: 'Synthesized Primitives',
            perception_group_title: 'Perception',
            perceptual_cortex_panel_title: 'Perceptual Cortex',

            // Autonomous Evolution
            autoevolution_approving: 'Auto-Evolution: Automatically approving and implementing proposal {{proposalId}}.',

            // New Math Plugins/Panels
            plugin_tool_lean_prover_name: 'Lean Prover',
            plugin_tool_lean_prover_desc: 'A mock interface to the Lean 4 proof assistant for formal verification.',
            plugin_tool_computation_offload_name: 'Computation Offload',
            plugin_tool_computation_offload_desc: 'Offloads long-running computational jobs to a remote server.',
            lagrange_engine_panel_title: 'Lagrange Engine',
            lagrange_description: 'A symbolic-numeric hybrid engine for complex physics and math problems.',
            mathematical_research_group_title: 'Mathematical Research & Symbolic Logic',

            // Socratic Assessor
            // socratic_assessor_panel_title: "Socratic Assessor",

            // New ATP Coprocessor keys
            atp_description: "An internal proof verification system that orchestrates a Triumvirate of Truth: the Euclid, G√∂del, and Tarski engines. It deconstructs conjectures, applies logical transformations, and validates each step to build a rigorous proof.",
            atp_goal: "Conjecture to Prove",
            atp_goal_placeholder: "e.g., Prove that the square root of 2 is irrational.",
            atp_initiate_program: "Initiate Proof Program",
            atp_proving: "Proving...",
            atp_reset: "Reset",
            atp_program_status: "Program Status",
            atp_status_idle: "Idle",
            atp_status_orchestrating: "Orchestrating",
            atp_status_planning: "Planning (Euclid)",
            atp_status_proving: "Proving (G√∂del/Tarski)",
            atp_status_success: "Success",
            atp_status_failed: "Failed",
            atp_view_landscape: "View Proof Landscape",
            atp_attempt_status: "Attempt Status",
            atp_proof_plan: "Proof Plan",
            atp_triumvirate_log: "Triumvirate Log",
            atp_step_pending: "Pending",
            atp_step_proving: "Proving",
            atp_step_proven: "Proven",
            atp_step_failed: "Failed",

            // Mycelial Network
            mycelial_network_panel_title: 'Mycelial Network',
            mycelial_description: 'Simulates the growth and pruning of conceptual pathways based on successful cognitive processes, reinforcing effective patterns.',
            mycelial_modules: 'Learned Modules',
            mycelial_log: 'Network Activity Log',
            mycelial_noLog: 'No network activity logged yet.',

            // Semantic Weaver
            semantic_weaver_panel_title: 'Semantic Weaver',
            semantic_weaver_description: 'A predictive model that learns the relationships between system events (syscalls) to anticipate cognitive flow and detect anomalies.',
            semantic_weaver_model_name: 'Syscall Autoencoder',
            semantic_weaver_model_desc: 'A neural network that learns to compress and reconstruct sequences of system calls.',
            semantic_weaver_status_trained: 'Trained',
            semantic_weaver_status_untrained: 'Untrained',
            semantic_weaver_reconstruction_accuracy: 'Reconstruction Accuracy',
            semantic_weaver_log: 'Training Log',
            semantic_weaver_noLog: 'No training activity logged yet.',
            
            // Spanda Engine
            spanda_panel_title: 'Spanda Engine',
            spanda_description: 'Visualizes the high-dimensional internal state of Aura on a 2D manifold, representing the "spanda" or primordial vibration of the system.',
            spanda_currentRegion: 'Current Region',
            
            // Lagrange Engine
            lagrange_symbolic: "Symbolic Equation",
            lagrange_numerical: "Numerical Discretization",
        }
    }
};